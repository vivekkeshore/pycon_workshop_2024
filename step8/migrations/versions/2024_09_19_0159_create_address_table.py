"""create address table

Revision ID: cf23cb64a238
Revises: 207ef1efca8c
Create Date: 2024-09-19 01:59:04.784156

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cf23cb64a238'
down_revision: Union[str, None] = '207ef1efca8c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('label', sa.String(length=256), nullable=True),
    sa.Column('address_line1', sa.String(length=256), nullable=False),
    sa.Column('address_line2', sa.String(length=256), nullable=True),
    sa.Column('city', sa.String(length=256), nullable=False),
    sa.Column('state', sa.String(length=256), nullable=False),
    sa.Column('zip_code', sa.String(length=10), nullable=False),
    sa.Column('country', sa.String(length=256), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='users'
    )
    op.create_index('idx_address_user_id', 'address', ['user_id'], unique=False, schema='users')
    op.create_index(op.f('ix_users_address_id'), 'address', ['id'], unique=False, schema='users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_address_id'), table_name='address', schema='users')
    op.drop_index('idx_address_user_id', table_name='address', schema='users')
    op.drop_table('address', schema='users')
    # ### end Alembic commands ###
