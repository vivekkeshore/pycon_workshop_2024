"""create cart tables

Revision ID: e20e9a8d027f
Revises: ac5cd3a9677e
Create Date: 2024-09-19 02:05:27.597144

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e20e9a8d027f'
down_revision: Union[str, None] = 'ac5cd3a9677e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE SCHEMA IF NOT EXISTS orders")
    op.create_table('cart',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='orders'
    )
    op.create_index('idx_cart_user_id', 'cart', ['user_id'], unique=False, schema='orders')
    op.create_index(op.f('ix_orders_cart_id'), 'cart', ['id'], unique=False, schema='orders')
    op.create_table('cart_item',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('cart_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('product_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['cart_id'], ['orders.cart.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.product.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='orders'
    )
    op.create_index('idx_cart_item_cart_id', 'cart_item', ['cart_id'], unique=False, schema='orders')
    op.create_index('idx_cart_item_product_id', 'cart_item', ['product_id'], unique=False, schema='orders')
    op.create_index(op.f('ix_orders_cart_item_id'), 'cart_item', ['id'], unique=False, schema='orders')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_orders_cart_item_id'), table_name='cart_item', schema='orders')
    op.drop_index('idx_cart_item_product_id', table_name='cart_item', schema='orders')
    op.drop_index('idx_cart_item_cart_id', table_name='cart_item', schema='orders')
    op.drop_table('cart_item', schema='orders')
    op.drop_index(op.f('ix_orders_cart_id'), table_name='cart', schema='orders')
    op.drop_index('idx_cart_user_id', table_name='cart', schema='orders')
    op.drop_table('cart', schema='orders')
    op.execute("DROP SCHEMA IF EXISTS orders CASCADE")
    # ### end Alembic commands ###
